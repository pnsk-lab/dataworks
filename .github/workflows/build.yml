name: Build DataWorks

on:
  workflow_dispatch:
  schedule:
  - cron: "0 */6 * * *"

jobs:
  build:

    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        save-always: true
        path: |
          /usr/watcom
        key: cache-${{ github.sha }}
        restore-keys: cache-
    - name: Install packages
      run: sudo apt-get install zip byacc flex doxygen mingw-w64 graphviz
    - name: Create /usr/watcom
      run: sudo mkdir /usr/watcom
    - name: Install Open Watcom
      run: curl -L https://github.com/open-watcom/open-watcom-v2/releases/download/Current-build/ow-snapshot.tar.xz | sudo tar xvJf - -C /usr/watcom
    - name: Add PATH
      run: echo "/usr/watcom/binl64" >> $GITHUB_PATH
    - name: Add WATCOM env
      run: echo "WATCOM=/usr/watcom" >> $GITHUB_ENV
    - name: Add INCLUDE env
      run: echo "INCLUDE=/usr/watcom/h" >> $GITHUB_ENV
    - name: Make sure it is clean (linux64)
      run: make clean
    - name: Make for linux64
      run: make YACC=byacc -j3 archive
    - name: Rename to -linux64
      run: mv dataworks.zip dataworks-linux64.zip && mv dataworks.tar.gz dataworks-linux64.tar.gz && mv Client/dataworks.exe dataworks-linux64 && mv Server/dataworks_server.exe dataworks-server-linux64
    - name: Make sure it is clean (win32)
      run: make clean PLATFORM=win32
    - name: Make for win32
      run: make YACC=byacc PLATFORM=win32 -j3 archive
    - name: Rename to -win32
      run: mv dataworks.zip dataworks-win32.zip && mv dataworks.tar.gz dataworks-win32.tar.gz && mv Client/dataworks.exe dataworks-win32.exe && mv Server/dataworks_server.exe dataworks-server-win32.exe
    - name: Make sure it is clean (win64)
      run: make clean PLATFORM=win64
    - name: Make for win64
      run: make YACC=byacc PLATFORM=win64 -j3 archive
    - name: Rename to -win64
      run: mv dataworks.zip dataworks-win64.zip && mv dataworks.tar.gz dataworks-win64.tar.gz && mv Client/dataworks.exe dataworks-win64.exe && mv Server/dataworks_server.exe dataworks-server-win64.exe
    - name: Make sure it is clean (dos)
      run: make clean PLATFORM=dos
    - name: Make for DOS
      run: make YACC=byacc PLATFORM=dos -j3 archive
    - name: Rename to -dos
      run: mv dataworks.zip dataworks-dos.zip && mv dataworks.tar.gz dataworks-dos.tar.gz && mv Client/dataworks.exe dataworks-dos.exe && mv Server/dataworks_server.exe dataworks-server-dos.exe
    - name: Make sure it is clean (dos4g)
      run: make clean PLATFORM=dos4g
    - name: Make for DOS/4GW
      run: make YACC=byacc PLATFORM=dos4g -j3 archive
    - name: Rename to -dos4g
      run: mv dataworks.zip dataworks-dos4g.zip && mv dataworks.tar.gz dataworks-dos4g.tar.gz && mv Client/dataworks.exe dataworks-dos4g.exe && mv Server/dataworks_server.exe dataworks-server-dos4g.exe
    - name: Release
      run: gh release create -t "Release $(date +"%a %b %e %H:%M:%S %Z %Y")" "$(date +%Y%m%d%H%M%S)" dataworks-linux64.{tar.gz,zip} dataworks-win32.{tar.gz,zip} dataworks-dos4g.{tar.gz,zip} dataworks-dos.{tar.gz,zip} dataworks-win64.{tar.gz,zip} dataworks-server-win32.exe dataworks-server-win64.exe dataworks-server-dos.exe dataworks-server-dos4g.exe dataworks-win32.exe dataworks-win64.exe dataworks-dos.exe dataworks-dos4g.exe dataworks-linux64 dataworks-server-linux64 -n "Version \`$(make get-version)\` was built in this release"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Kill apt-get
      run: sudo killall apt-get || true
