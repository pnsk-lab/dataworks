name: Build DataWorks

on:
  workflow_dispatch:
  schedule:
  - cron: "0 */6 * * *"

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-generic:

    name: "Build for DOS"

    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install packages
      run: sudo apt-get install zip byacc flex doxygen mingw-w64 graphviz
    - name: Create /usr/watcom
      run: sudo mkdir -p /usr/watcom
    - name: Install Open Watcom
      run: curl -L https://github.com/open-watcom/open-watcom-v2/releases/download/Last-CI-build/ow-snapshot.tar.xz | sudo tar xvJf - -C /usr/watcom
    - name: Add PATH
      run: echo "/usr/watcom/binl64" >> $GITHUB_PATH
    - name: Add WATCOM env
      run: echo "WATCOM=/usr/watcom" >> $GITHUB_ENV
    - name: Add INCLUDE env
      run: echo "INCLUDE=/usr/watcom/h" >> $GITHUB_ENV
    - name: Make sure it is clean
      run: make clean PLATFORM=dos
    - name: Make for DOS
      run: make YACC=byacc PLATFORM=dos -j3 archive
    - name: Rename to -dos
      run: mv dataworks.zip dataworks-dos.zip && mv dataworks.tar.gz dataworks-dos.tar.gz && mv Client/dataworks.exe dataworks-dos.exe && mv Server/dataworks_server.exe dataworks-server-dos.exe && mv RemoteClient/dataworks_remote_client dataworks-remote-client-dos.exe
    - name: Create artifact
      run: zip -rv build-dos.zip dataworks-dos.tar.gz dataworks-dos.zip dataworks-server-dos.exe dataworks-dos.exe dataworks-remote-client-dos.exe
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-dos
        path: build-dos.zip

  build-mac:

    name: "Build for MacOS"

    runs-on: macos-latest

    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install packages
      run: brew install flex byacc make doxygen graphviz
    - name: Make
      run: make -j3 YACC=byacc archive
    - name: Rename
      run: mv dataworks.tar.gz dataworks-macos-arm64.tar.gz && mv dataworks.zip dataworks-macos-arm64.zip && mv Client/dataworks dataworks-macos-arm64 && mv Server/dataworks_server dataworks-server-macos-arm64
    - name: Create artifact
      run: zip -rv build-macos.zip dataworks-*.tar.gz dataworks-*.zip dataworks-server-macos-arm64 dataworks-macos-arm64
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-macos
        path: build-macos.zip

  build-debpkg:

    name: "Build for .deb"

    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install packages
      run: sudo apt install flex byacc make graphviz
    - name: Make
      run: make YACC=byacc ./Package/dataworks.deb DEB_ARCH=amd64
    - name: Rename
      run: mv Package/dataworks.deb dataworks.deb
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-debpkg
        path: dataworks.deb

  build-dosimg:

    name: "Build for DOS floppy image"

    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install packages
      run: sudo apt install flex byacc make graphviz mtools xvfb dosbox
    - name: Create /usr/watcom
      run: sudo mkdir -p /usr/watcom
    - name: Install Open Watcom
      run: curl -L https://github.com/open-watcom/open-watcom-v2/releases/download/Last-CI-build/ow-snapshot.tar.xz | sudo tar xvJf - -C /usr/watcom
    - name: Add PATH
      run: echo "/usr/watcom/binl64" >> $GITHUB_PATH
    - name: Add WATCOM env
      run: echo "WATCOM=/usr/watcom" >> $GITHUB_ENV
    - name: Add INCLUDE env
      run: echo "INCLUDE=/usr/watcom/h" >> $GITHUB_ENV
    - name: Make
      run: xvfb-run make YACC=byacc dos-installer FLOPPY_SIZE=1440
    - name: Rename
      run: mv install.img install1440.img
    - name: Make
      run: xvfb-run make YACC=byacc dos-installer FLOPPY_SIZE=1200
    - name: Rename
      run: mv install.img install1200.img
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-dosimg1200
        path: install1200.img
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-dosimg1440
        path: install1440.img

  test:

    name: "Test"

    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install packages
      run: sudo apt install flex byacc make graphviz
    - name: Make
      run: make YACC=byacc test

  release:
    
    name: "Release"

    runs-on: ubuntu-latest

    permissions:
      contents: write

    needs: [build-dos, build-mac, build-debpkg, build-dosimg, test]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Download from build-dos
      uses: actions/download-artifact@v4
      with:
        name: build-dos
    - name: Download from build-macos
      uses: actions/download-artifact@v4
      with:
        name: build-macos
    - name: Download from build-debpkg
      uses: actions/download-artifact@v4
      with:
        name: build-debpkg
    - name: Download from build-dosimg1200
      uses: actions/download-artifact@v4
      with:
        name: build-dosimg1200
    - name: Download from build-dosimg1440
      uses: actions/download-artifact@v4
      with:
        name: build-dosimg1440
    - name: Extract the build-dos
      run: unzip $GITHUB_WORKSPACE/build-dos.zip
    - name: Extract the build-macos
      run: unzip $GITHUB_WORKSPACE/build-macos.zip
    - name: Rename dataworks.deb
      run: mv dataworks.deb dataworks-amd64-ubuntu.deb
    - name: Delete old release
      run: gh release delete "$(make get-version)" --cleanup-tag -y || true
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Release
      run: gh release create -t "v$(make get-version)" "$(make get-version)" dataworks-dos.{tar.gz,zip} dataworks-macos-arm64.{tar.gz,zip} dataworks-macos-arm64 dataworks-server-macos-arm64 install1200.img install1440.img dataworks-amd64-ubuntu.deb -n "Version \`$(make get-version)\` was built in this release"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
